<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_textInputBox</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>window_set_cursor(cr_beam);
keyboardString = "";
caret = 0;
endpt = 0;
xx = 10;
yy = 10;
canEdit = 0;
state = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state++;
alarm[1] = 20;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///do nth
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!canEdit || (keyboard_string == "" &amp;&amp; keyboardString != "" &amp;&amp; keyboard_key != vk_backspace)){ //??
    keyboard_string = keyboardString;
}
if(keyboard_check(vk_anykey)){
    state = 1;
    keyboard_string = string_copy(keyboard_string,1,20 + string_count("\#",keyboard_string));
} else{
    alarm[0] = 15;
}

if(keyboard_check_pressed(vk_home)){
    caret = 0;
}
if(keyboard_check_pressed(vk_end)){
    caret = string_length(keyboardString);
}
if(caret &gt; 0 &amp;&amp; (keyboard_check_pressed(vk_left) || (keyboard_check(vk_left) &amp;&amp; alarm[0] == -1))){
    caret -= 1 + (string_char_at(keyboard_string,caret) == "#");
}
if(caret &lt; string_length(keyboardString) &amp;&amp; (keyboard_check_pressed(vk_right) || (keyboard_check(vk_right) &amp;&amp; alarm[0] == -1))){
    caret += 1 + (string_char_at(keyboard_string,caret + 2) == "#");
}

if(mouse_check_button_pressed(mb_left)){
    if(position_meeting(mouse_x,mouse_y,self)){
        canEdit = 1;
        state = 1;
        alarm[1] = 20;
    } else{
        canEdit = 0;
    }
    caret = scr_mouse(); //??
}
if(mouse_check_button(mb_left) || mouse_check_button_released(mb_left)){
    endpt = scr_mouse();
}

//caret != endpt //# //more
if(keyboard_check(vk_control) &amp;&amp; keyboard_check_pressed(ord("A"))){
    caret = 0;
    endpt = string_length(keyboardString);
}
if(keyboard_check(vk_control) &amp;&amp; keyboard_check_pressed(ord("X"))){
    clipboard_set_text(string_copy(keyboardString,min(caret,endpt) + 1,abs(endpt - caret)));
    keyboardString = string_delete(keyboardString,min(caret,endpt) + 1,abs(endpt - caret));
    keyboard_string = keyboardString;
    caret = min(caret,endpt);
}
if(keyboard_check(vk_control) &amp;&amp; keyboard_check_pressed(ord("C"))){
    clipboard_set_text(string_copy(keyboardString,min(caret,endpt) + 1,abs(endpt - caret)));
}
if(keyboard_check(vk_control) &amp;&amp; keyboard_check_pressed(ord("V"))){
    for(i = 0; i &lt; string_length(clipboard_get_text()); i++){
        if(string_length(keyboardString) == 20){
            break;
        }
        if(string_pos(string_copy(clipboard_get_text(),i + 1,1),'"' + "!#$%&amp;'()*+,-./0123456789:;&lt;=&gt;?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~") == 0){
            continue;
        } //??
        keyboardString = string_insert(string_copy(clipboard_get_text(),i + 1,1),keyboardString,caret + 1);
        keyboard_string = keyboardString;
        caret++;
    }
}

if(string_length(keyboard_string) &gt; string_length(keyboardString)){
    if(string_char_at(keyboard_string,string_length(keyboard_string)) == "#"){
        keyboard_string = string_insert("\#",keyboard_string,caret + 1);
    } else{
        keyboard_string = string_insert(string_char_at(keyboard_string,string_length(keyboard_string)),keyboard_string,caret + 1);
    }
    keyboard_string = string_delete(keyboard_string,string_length(keyboard_string),1);
    caret += string_length(keyboard_string) - string_length(keyboardString);
}
if(string_length(keyboard_string) &lt; string_length(keyboardString)){
    keyboard_string += string_char_at(keyboardString,string_length(keyboardString));
    keyboard_string = string_delete(keyboard_string,caret - (string_char_at(keyboard_string,caret) == "#"),1 + (string_char_at(keyboard_string,caret) == "#"));
    caret -= (caret &gt; 0) * (string_length(keyboardString) - string_length(keyboard_string));
}
if(keyboard_check_pressed(vk_delete) || (keyboard_check(vk_delete) &amp;&amp; alarm[0] == -1)){
    keyboard_string = string_delete(keyboard_string, caret + 1, 1 + (string_char_at(keyboard_string,caret + 2) == "#"));
}
if(canEdit){
    keyboardString = keyboard_string;
}

if(keyboard_check(vk_anykey)){ //??
    endpt = caret;
}
//vk_enter

if(keyboard_check_pressed(vk_escape) &amp;&amp; keyboardString != ""){
    if(room_exists(asset_get_index(string_upper(keyboardString)))){
        room_goto(asset_get_index(string_upper(keyboardString)));
    } else{
        room_goto(room_duplicate(WORLD));
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
draw_set_font(f_fancy);
draw_text(xx, yy, keyboardString);
draw_text(xx, yy + 100, keyboard_string);
if(canEdit &amp;&amp; (caret != endpt || (caret == endpt &amp;&amp; state &amp; 1))){
    draw_set_alpha(1 - 0.7 * (caret != endpt));
    draw_rectangle(xx + string_width(string_copy(keyboardString,1,caret)), yy, xx + string_width(string_copy(keyboardString,1,endpt)), yy + string_height("\\"), 0);
    draw_set_alpha(1);
}
draw_text(100,200,string_length(keyboardString));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
