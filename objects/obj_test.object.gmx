<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>keyboardString = "";
caret = 0;
stringPart = "";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(keyboard_check_pressed(vk_backspace)){
    keyboardString = string_delete(keyboardString, caret, 1);
    caret--;
} else if(keyboard_check_pressed(vk_anykey) &amp;&amp; !keyboard_check_pressed(vk_shift) &amp;&amp; !keyboard_check_pressed(vk_left) &amp;&amp; !keyboard_check_pressed(vk_right)){
    keyboardString = string_insert(keyboard_lastchar, keyboardString, caret + 1);
    caret++;
}

if(keyboard_check_pressed(vk_home)){
    caret = 0;
}
if(keyboard_check_pressed(vk_end)){
    caret = string_length(keyboardString);
}
if(keyboard_check_pressed(vk_left) &amp;&amp; caret &gt; 0){
    caret--;
}
if(keyboard_check_pressed(vk_right) &amp;&amp; caret &lt; string_length(keyboardString)){
    caret++;
}

if(mouse_check_button_pressed(mb_left)){
    for(i = 0; i &lt; string_length(keyboardString); i++){
        width[i] = string_width(string_copy(keyboardString,i+1,1));
    }
    index = 0;
    check = 0;
    while(check &lt; mouse_x - 200){
        if(index &lt; string_length(keyboardString)){
            check += width[index];
            index++;
        } else{
            break; //prevent pressing beyond string
        }
    }
    if((mouse_x - 200) - string_width(string_copy(keyboardString,1,index - 1)) &lt; string_width(string_copy(keyboardString,1,index)) - (mouse_x - 200)){
        caret = index - 1;
    } else{
        caret = index;
    }
}

if(keyboardString != ""){
    stringPart = string_copy(keyboardString,1,caret);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(f_fancy);
draw_text(200, 200, keyboardString);
draw_line(200 + string_width(stringPart), 200, 200 + string_width(stringPart), 200 + string_height("\\"));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
